建立用户的Portlet
==========================

这个部分，我们设计第一个完整的Portlet - 用户菜单portlet，用来显示菜单列表，还可以为认证用户提供链接。这些菜单包括：

 * 审核评论：未审核评论表链接； 
 * 建立新文章：链接到新建文章； 
 * 管理文章：链接到管理页面； 
 * 退出：退出链接；


建立用户菜单类
-------------------------

我们将一些逻辑放在用户菜单 `UserMenu` 类中，并扩展到Portlet类。这个类在 `/wwwroot/blog/protected/components/UserMenu.php` ，就是一下内容：

~~~
[php]
<?php
class UserMenu extends Portlet
{
    public function init()
    {
        $this->title=CHtml::encode(Yii::app()->user->name);
        parent::init();
    }
 
    protected function renderContent()
    {
        $this->render('userMenu');
    }
}   
~~~

`UserMenu` 类扩展了刚才我们建立的 `Portlet` 类中。它覆盖了 `init()` 方法和 `renderContent()` 方法。这个 `portlet` 标题就是当前用户名；`renderContent()` 方法来实现视图，视图名为 `userMenu` 。

> Tip|技巧: 现在可能知道我们为什么需要在这个包含 `Portlet` 类了。如果还不清楚，请参阅前一节。


建立userMenu视图
------------------------

接下来，我们来建立userMenu视图，它保存在 `/wwwroot/blog/protected/components/views/usermenu.php` :

~~~
[php]
<ul>
<li><?php echo CHtml::link('Approve Comments', array('comment/list'))
    . ' (' . Comment::model()->pendingCommentCount . ')'; ?></li>
<li><?php echo CHtml::link('Create New Post',array('post/create')); ?></li>
<li><?php echo CHtml::link('Manage Posts',array('post/admin')); ?></li>
<li><?php echo CHtml::linkButton('Logout',array(
    'submit'=>'',
    'params'=>array('command'=>'logout'),
)); ?></li>
</ul>   
~~~

> Info|信息: 默认情况下，widget的视图文件应该在view子目录下。文件名和指定视图名相同。

上面的视图中，我们使用[CHtml::link]来建立链接，使用[CHtml:linkButton]来建立递交方式。当递交点击后，它会将参数返回到当前页，并将参数定义为退出。

为了能实现上面的登出链接，我们需要修改UserMenu的init()方法来实现:

~~~
[php]
public function init()
{
    if(isset($_POST['command']) && $_POST['command']==='logout')
    {
        Yii::app()->user->logout();
        $this->controller->redirect(Yii::app()->homeUrl);
    }
 
    $this->title=CHtml::encode(Yii::app()->user->name);
    parent::init();
}   
~~~

这个`init()`方法，是由 `POST` 参数命令来决定登录动作。如果登出，我们就直接去除当前用户信息然后返回到系统主页。注意这里的 `redirect()` 方法将中断当前页的执行工作。


使用userMenu Portlet
------------------------

然后我们在尝试一下我们修改过的UserMenuportlet类的执行情况。首先，我们修改一下布局视图 `/wwwroot/blog/protected/views/layouts/main.php` ，就像下面一样:

~~~
[php]
......
 <div id="sidebar">
 <?php $this->widget('UserMenu',array('visible'=>!Yii::app()->user->isGuest)); ?>
 </div>
 ......   
~~~

就像上面代码一样，我们使用 `widget()` 方法来执行 `UserMenu` 类。因为这个portlget将紧紧被认证过用户使用，我们这些写就能使得非认证用户不能看到这个内容。


测试 UserMenu Portlet
------------------------

让我们测试一下成果。


 1. 打开浏览器，输入以下地址 `http://www.example.com/blog/index.php` 。检查一下是否侧边栏没有任何信息输出。 
 2. 点击登录连接，然后登陆。如果成登陆成功，我们则看一下侧边栏是否已经存在内容，也就是登陆名。 
 3. 点击登出。看一下登出是否成功且UserMenu 的变化。


小结
------------------------

这里我们建立的portlet具有高度可重用性。我们可以方便的在不同项目中使用，而不做修改或少量修改。因此，portlet的设计因遵循逻辑和显示分开的原则。我们应当习惯这些设计和操作方式，因为这些方式在典型的 `Yii` 系统项目中常常被用到。
