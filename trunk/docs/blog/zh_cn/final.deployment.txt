最终调节和部署
============================

我们将最终结束我们博客系统。在最终部署前，我们做一些调节。


修改首页
------------------

我们将文章列表页作为首页。我们修改一下系统配置[application configuration](http://www.yiiframework.com/doc/guide/basics.application#application-configuration)，

~~~
[php]
return array(
    ......
    'defaultController'=>'post',
    ......
);   
~~~

> Tip|技巧: 因为将 `PostController` 已经定义为默认的动作，所以当我们打开网站是就可以看到文章列表了。


设置缓存
------------------

因为 `ActiveRecord` 依赖于 `metadata` 数据，它需要花一些时间来读写。这个在编写过程中没有多大的问题，但在运行期间，它会成为系统瓶颈，尤其在数据没有变化的时间。因此，我们应该为它加一个缓存。

~~~
[php]
return array(
    ......
    'components'=>array(
        ......
        'cache'=>array(
            'class'=>'CDbCache',
        ),
        'db'=>array(
            'class'=>'system.db.CDbConnection',
            'connectionString'=>'sqlite:/wwwroot/blog/protected/data/blog.db',
            'schemaCachingDuration'=>3600,
        ),
    ),
);   
~~~

上面我们将为SQLIte开启缓存。如果我们服务器有其它缓存扩展，类似APC，那效果将更好。我们再设置 `schemaCachingDuration` 时间为3600,意味着缓存时间为3600秒。


禁止调试模式
------------------

我们来修改一下 `/wwwroot/blog/index.php` 文件，把 `YII_DEBUG` 移除掉。这个参数在调试系统时非常有用，它能在系统出现错误时提供更多信息。然而，系统如果被发布后，再显示调试信息就不是个好主意，因为它会暴露更多含有文件绝对路径和其他一些不应该出现的信息。


部署应用程序
------------------

最终我们将系统 `/wwwroot/blog` ，部署发布到出去，主要就是复制了。我们来看以下步骤：


 1. 如果部署机上未安装Yii，则请安装它； 
 2. 复制 `/wwwroot/blog` 整个目录到目标位置; 
 3. 修改 `index.php` 文件中的 `$yii` 变量指向到我们安装的Yii bootstrap文件; 
 4. 修改 `protected/yiic.php` 中的 `$yiic `变量指向到我们安装 Yii `yiic.php` 文件; 
 5. 修改目录权限 `assets` 和 `protected/runtime` 使得它们能被写入.