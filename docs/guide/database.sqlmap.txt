SqlMap Data Mapper
==================

The purpose of a data mapper is to move data between objects and a database 
while keeping them independent of each other and the mapper itself. SqlMap Data 
Mapper is a PHP implementation of the iBATIS Data Mapper. SqlMap Data Mapper is 
a layer of software that separates domain objects (e.g. instances of PHP 
classes, PHP arrays and other PHP data types) from the database. When using a  
data mapper, the domain objects does **not** need to know that there's a atabase 
present, nor the knowledge of the database schema.

SqlMap is a good compliment to [Active Records (AR)](/doc/guide/database.ar). In 
particular, SqlMap and AR can be used in cooperation. The differences between 
Active Records and SqlMap Data Mapper can be summarized in the following.

**SqlMap Data Mapper**

   * Provides mapping of result sets to PHP data types.
   * No limitation on the complexity of SQL statements.
   * Model can be just simple PHP classes without dependencies 
     (e.g. no need to inherit a base class).
   * Provides flexible caching and cache invalidation.
   * Models can be independent of the underlying database vendor.
   * Provides lazy and eager loading of objects and list of objects.

**Active Record**

   * Maps one row of one database table to one instance of AR.
   * Requires only minimal SQL code to select/insert/update/delete 
     (or no SQL code at all in simple cases).
   * Models are extension of the base AR class.
   * Provides lazy and eager loading of relations.

When to Use It
--------------
One occasion for using data mapper is when you want the database schema and the 
object model to evolve independently. The domain objects have no idea what the 
database structure is, because all the correspondence is done by the mappers. 
This helps you in the code because you can understand and work with complex 
domain objects without having to understand how they're stored in the database. 
You can modify the business models or the database without having to alter 
either (of course, changes to the mappings and mappers are very likely 
required). With complicated mappings, particularly those involving existing 
databases, this is very valuable.

The data mapper is also very useful when complex queries are required, such as 
reporting style queries involving multiple joins and other conditionals. 

If you have fairly simple business logic, Active Record may be more suitable and 
simpler. Fortunately, the SqlMap data mapper can map result sets to Active 
Records. Thus, allowing complex queries to be handled by the data mapper and 
simpler queries via Active Records.

<div class="revision">$Id$</div>