Alias et Espaces de nommage
===========================

Yii utilise les alias de manière intensive. Un alias défini l'accès à un dossier
ou à un fichier. Les alias s'écrivent avec une notation pointée similaire au format
largement utilisée pour déclarer des espaces de nom.

~~~
AliasRacine.chemin.vers.la.cible
~~~

ou `AliasRacine` est un alias vers un dossier existant. Deux alias sont prédéfinis:
`system` et `application`. Le premier pointe vers le dossier du framework, et le
second pointe vers le dossier `protected` de l'application. Il est possible de
définir de nouveaux alias en appelant [YiiBase::setPathOfAlias()] (alias racine inclus).

[YiiBase::getPathOfAlias()] est la fonction décodage. Elle permet de transformer 
un alias en son chemin correspondant. Par exemple, `system.web.CController` 
sera transformé en `yii/framework/web/CController`.

Un alias permet d'importer simplement une classe. Par exemple, 
pour inclure la définition de la classe [CController], il est possible
d'effectuer l'appel suivant:

~~~
[php]
Yii::import('system.web.CController');
~~~

Il est à noter que la méthode [import|YiiBase::import] est plus efficace
que les directives classiques `include` et `require`. La définition de la
classe à importer n'étant pas incluse avant que la classe ne soit utilisée.
De la même manière, importer un alias plusieurs fois est plus rapide 
que d'utiliser les directives `include_once` et `require_once`.

> Truc: Il n'est pas nécessaire d'importer ou d'inclure les classes définies par le
framework Yii. Tous les classes du core étant pré-importées.

La syntaxe suivante peut être utilisée pour importer automatiquement
l'intégralité des classes d'un dossier.

~~~
[php]
Yii::import('system.web.*');
~~~

Les alias, en dehors de l'[import|YiiBase::import], sont utilisés pour 
référencer des classes. Par exemple, un alias peut être passé à 
[Yii::createComponent()] pour créer une instance de la classe correspondante, 
et ce, même si la class n'a pas été incluse précédemment.

Il est important de ne pas confondre alias et espace de nommage. 
Un espace de nommage permet de grouper de manière logique des classes 
pour qu'elles puissent être différenciées d'autres classes qui portent
le même nom. Un alias est uniquement utilisé pour référencer simplement un
fichier de classe ou un dossier. Les alias n'entrent donc pas en 
conflit avec les espaces de nommage.

> Truc: Comme les versions de PHP antérieures à la 5.3.0 ne supportent pas 
nativement les espaces de nommage, il n'est pas possible de créer des
instances de deux classes portant un même nom mais ayant des définitions différentes. 
Pour cette raison, toutes les classes du framework Yii sont préfixées de la 
lettre 'C' (pour 'Classe'). Cela permet de les différencier des classes 
définies par l'utilisateur. En conséquence, il est recommandé de
réserver la lettre 'C' aux classes du framework Yii et d'utiliser
d'autres lettres pour les classes utilisateur.

<div class="revision">$Id$</div>